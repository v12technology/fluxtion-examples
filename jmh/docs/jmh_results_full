# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: /development/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/lib/idea_rt.jar=59752:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.fluxtion.example.jmh.PriceLadderBenchmark.throughPut_BranchingProcessor

# Run progress: 0.00% complete, ETA 00:05:20
# Warmup Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
34513533.889 ops/s
# Warmup Iteration   2: TearDown - generate new random price ladders
32437249.030 ops/s
Iteration   1: TearDown - generate new random price ladders
34519208.510 ops/s
Iteration   2: TearDown - generate new random price ladders
34239979.295 ops/s

# Run progress: 12.50% complete, ETA 00:04:45
# Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
34916207.847 ops/s
# Warmup Iteration   2: TearDown - generate new random price ladders
34086187.798 ops/s
Iteration   1: TearDown - generate new random price ladders
34415598.618 ops/s
Iteration   2: TearDown - generate new random price ladders
32214696.743 ops/s


Result "com.fluxtion.example.jmh.PriceLadderBenchmark.throughPut_BranchingProcessor":
  33315147.680 ops/s


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: /development/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/lib/idea_rt.jar=59752:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.fluxtion.example.jmh.PriceLadderBenchmark.throughPut_No_BranchingProcessor

# Run progress: 25.00% complete, ETA 00:04:04
# Warmup Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
34837731.691 ops/s
# Warmup Iteration   2: TearDown - generate new random price ladders
33717947.298 ops/s
Iteration   1: TearDown - generate new random price ladders
33823220.064 ops/s
Iteration   2: TearDown - generate new random price ladders
34327761.531 ops/s

# Run progress: 37.50% complete, ETA 00:03:23
# Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
34873121.913 ops/s
# Warmup Iteration   2: TearDown - generate new random price ladders
32569585.141 ops/s
Iteration   1: TearDown - generate new random price ladders
34501621.098 ops/s
Iteration   2: TearDown - generate new random price ladders
34149344.660 ops/s


Result "com.fluxtion.example.jmh.PriceLadderBenchmark.throughPut_No_BranchingProcessor":
  34325482.879 ops/s


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: /development/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/lib/idea_rt.jar=59752:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fluxtion.example.jmh.PriceLadderBenchmark.avgTime_BranchingProcessor

# Run progress: 50.00% complete, ETA 00:02:42
# Warmup Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
28.819 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
29.204 ns/op
Iteration   1: TearDown - generate new random price ladders
29.384 ns/op
Iteration   2: TearDown - generate new random price ladders
30.645 ns/op

# Run progress: 62.50% complete, ETA 00:02:01
# Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
28.462 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
29.011 ns/op
Iteration   1: TearDown - generate new random price ladders
29.228 ns/op
Iteration   2: TearDown - generate new random price ladders
29.390 ns/op


Result "com.fluxtion.example.jmh.PriceLadderBenchmark.avgTime_BranchingProcessor":
  29.309 ns/op


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-58
# VM invoker: /development/Library/Java/JavaVirtualMachines/openjdk-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/lib/idea_rt.jar=59752:/development/Applications/IntelliJ IDEA Ultimate.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 2 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.fluxtion.example.jmh.PriceLadderBenchmark.avgTime_No_BranchingProcessor

# Run progress: 75.00% complete, ETA 00:01:21
# Warmup Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
30.616 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
29.432 ns/op
Iteration   1: TearDown - generate new random price ladders
29.551 ns/op
Iteration   2: TearDown - generate new random price ladders
29.414 ns/op

# Run progress: 87.50% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: Do Setup
TearDown - generate new random price ladders
28.641 ns/op
# Warmup Iteration   2: TearDown - generate new random price ladders
29.364 ns/op
Iteration   1: TearDown - generate new random price ladders
30.883 ns/op
Iteration   2: TearDown - generate new random price ladders
30.345 ns/op


Result "com.fluxtion.example.jmh.PriceLadderBenchmark.avgTime_No_BranchingProcessor":
  30.614 ns/op


# Run complete. Total time: 00:05:25

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                               Mode  Cnt         Score   Error  Units
PriceLadderBenchmark.throughPut_BranchingProcessor     thrpt    2  33315147.680          ops/s
PriceLadderBenchmark.throughPut_No_BranchingProcessor  thrpt    2  34325482.879          ops/s
PriceLadderBenchmark.avgTime_BranchingProcessor         avgt    2        29.309          ns/op
PriceLadderBenchmark.avgTime_No_BranchingProcessor      avgt    2        30.614          ns/op

Process finished with exit code 0
